services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vocabulary-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  alembic:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - .:/app
    working_dir: /app
    command: ["/opt/venv/bin/python", "-m", "alembic", "upgrade", "head"]
    networks:
      - vocabulary-network
    env_file:
      - .env

  api:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      alembic:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - vocabulary-network
    env_file:
      - .env

networks:
  vocabulary-network:
    driver: bridge

volumes:
  postgres_data: